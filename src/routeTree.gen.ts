/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StaffImport } from './routes/staff'
import { Route as SignInImport } from './routes/sign-in'
import { Route as ProfileImport } from './routes/profile'
import { Route as AdminImport } from './routes/admin'
import { Route as IndexImport } from './routes/index'
import { Route as StaffIndexImport } from './routes/staff/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as StaffPatientsImport } from './routes/staff/patients'
import { Route as StaffAppointmentImport } from './routes/staff/appointment'
import { Route as AdminServicesImport } from './routes/admin/services'
import { Route as AdminRoomsImport } from './routes/admin/rooms'
import { Route as AdminPatientsImport } from './routes/admin/patients'
import { Route as AdminDepartmentsImport } from './routes/admin/departments'
import { Route as AdminAppointmentsImport } from './routes/admin/appointments'
import { Route as AdminAppointmentImport } from './routes/admin/appointment'
import { Route as AdminAnalyticsImport } from './routes/admin/analytics'
import { Route as AdminAccountsImport } from './routes/admin/accounts'
import { Route as AdminStaffIndexImport } from './routes/admin/staff/index'
import { Route as AdminStaffShiftsImport } from './routes/admin/staff/shifts'

// Create/Update Routes

const StaffRoute = StaffImport.update({
  path: '/staff',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StaffIndexRoute = StaffIndexImport.update({
  path: '/',
  getParentRoute: () => StaffRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)

const StaffPatientsRoute = StaffPatientsImport.update({
  path: '/patients',
  getParentRoute: () => StaffRoute,
} as any)

const StaffAppointmentRoute = StaffAppointmentImport.update({
  path: '/appointment',
  getParentRoute: () => StaffRoute,
} as any)

const AdminServicesRoute = AdminServicesImport.update({
  path: '/services',
  getParentRoute: () => AdminRoute,
} as any)

const AdminRoomsRoute = AdminRoomsImport.update({
  path: '/rooms',
  getParentRoute: () => AdminRoute,
} as any)

const AdminPatientsRoute = AdminPatientsImport.update({
  path: '/patients',
  getParentRoute: () => AdminRoute,
} as any)

const AdminDepartmentsRoute = AdminDepartmentsImport.update({
  path: '/departments',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAppointmentsRoute = AdminAppointmentsImport.update({
  path: '/appointments',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAppointmentRoute = AdminAppointmentImport.update({
  path: '/appointment',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAnalyticsRoute = AdminAnalyticsImport.update({
  path: '/analytics',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAccountsRoute = AdminAccountsImport.update({
  path: '/accounts',
  getParentRoute: () => AdminRoute,
} as any)

const AdminStaffIndexRoute = AdminStaffIndexImport.update({
  path: '/staff/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminStaffShiftsRoute = AdminStaffShiftsImport.update({
  path: '/staff/shifts',
  getParentRoute: () => AdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/staff': {
      id: '/staff'
      path: '/staff'
      fullPath: '/staff'
      preLoaderRoute: typeof StaffImport
      parentRoute: typeof rootRoute
    }
    '/admin/accounts': {
      id: '/admin/accounts'
      path: '/accounts'
      fullPath: '/admin/accounts'
      preLoaderRoute: typeof AdminAccountsImport
      parentRoute: typeof AdminImport
    }
    '/admin/analytics': {
      id: '/admin/analytics'
      path: '/analytics'
      fullPath: '/admin/analytics'
      preLoaderRoute: typeof AdminAnalyticsImport
      parentRoute: typeof AdminImport
    }
    '/admin/appointment': {
      id: '/admin/appointment'
      path: '/appointment'
      fullPath: '/admin/appointment'
      preLoaderRoute: typeof AdminAppointmentImport
      parentRoute: typeof AdminImport
    }
    '/admin/appointments': {
      id: '/admin/appointments'
      path: '/appointments'
      fullPath: '/admin/appointments'
      preLoaderRoute: typeof AdminAppointmentsImport
      parentRoute: typeof AdminImport
    }
    '/admin/departments': {
      id: '/admin/departments'
      path: '/departments'
      fullPath: '/admin/departments'
      preLoaderRoute: typeof AdminDepartmentsImport
      parentRoute: typeof AdminImport
    }
    '/admin/patients': {
      id: '/admin/patients'
      path: '/patients'
      fullPath: '/admin/patients'
      preLoaderRoute: typeof AdminPatientsImport
      parentRoute: typeof AdminImport
    }
    '/admin/rooms': {
      id: '/admin/rooms'
      path: '/rooms'
      fullPath: '/admin/rooms'
      preLoaderRoute: typeof AdminRoomsImport
      parentRoute: typeof AdminImport
    }
    '/admin/services': {
      id: '/admin/services'
      path: '/services'
      fullPath: '/admin/services'
      preLoaderRoute: typeof AdminServicesImport
      parentRoute: typeof AdminImport
    }
    '/staff/appointment': {
      id: '/staff/appointment'
      path: '/appointment'
      fullPath: '/staff/appointment'
      preLoaderRoute: typeof StaffAppointmentImport
      parentRoute: typeof StaffImport
    }
    '/staff/patients': {
      id: '/staff/patients'
      path: '/patients'
      fullPath: '/staff/patients'
      preLoaderRoute: typeof StaffPatientsImport
      parentRoute: typeof StaffImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/staff/': {
      id: '/staff/'
      path: '/'
      fullPath: '/staff/'
      preLoaderRoute: typeof StaffIndexImport
      parentRoute: typeof StaffImport
    }
    '/admin/staff/shifts': {
      id: '/admin/staff/shifts'
      path: '/staff/shifts'
      fullPath: '/admin/staff/shifts'
      preLoaderRoute: typeof AdminStaffShiftsImport
      parentRoute: typeof AdminImport
    }
    '/admin/staff/': {
      id: '/admin/staff/'
      path: '/staff'
      fullPath: '/admin/staff'
      preLoaderRoute: typeof AdminStaffIndexImport
      parentRoute: typeof AdminImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AdminRoute: AdminRoute.addChildren({
    AdminAccountsRoute,
    AdminAnalyticsRoute,
    AdminAppointmentRoute,
    AdminAppointmentsRoute,
    AdminDepartmentsRoute,
    AdminPatientsRoute,
    AdminRoomsRoute,
    AdminServicesRoute,
    AdminIndexRoute,
    AdminStaffShiftsRoute,
    AdminStaffIndexRoute,
  }),
  ProfileRoute,
  SignInRoute,
  StaffRoute: StaffRoute.addChildren({
    StaffAppointmentRoute,
    StaffPatientsRoute,
    StaffIndexRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.ts",
      "children": [
        "/",
        "/admin",
        "/profile",
        "/sign-in",
        "/staff"
      ]
    },
    "/": {
      "filePath": "index.ts"
    },
    "/admin": {
      "filePath": "admin.ts",
      "children": [
        "/admin/accounts",
        "/admin/analytics",
        "/admin/appointment",
        "/admin/appointments",
        "/admin/departments",
        "/admin/patients",
        "/admin/rooms",
        "/admin/services",
        "/admin/",
        "/admin/staff/shifts",
        "/admin/staff/"
      ]
    },
    "/profile": {
      "filePath": "profile.ts"
    },
    "/sign-in": {
      "filePath": "sign-in.ts"
    },
    "/staff": {
      "filePath": "staff.ts",
      "children": [
        "/staff/appointment",
        "/staff/patients",
        "/staff/"
      ]
    },
    "/admin/accounts": {
      "filePath": "admin/accounts.ts",
      "parent": "/admin"
    },
    "/admin/analytics": {
      "filePath": "admin/analytics.ts",
      "parent": "/admin"
    },
    "/admin/appointment": {
      "filePath": "admin/appointment.ts",
      "parent": "/admin"
    },
    "/admin/appointments": {
      "filePath": "admin/appointments.ts",
      "parent": "/admin"
    },
    "/admin/departments": {
      "filePath": "admin/departments.ts",
      "parent": "/admin"
    },
    "/admin/patients": {
      "filePath": "admin/patients.ts",
      "parent": "/admin"
    },
    "/admin/rooms": {
      "filePath": "admin/rooms.ts",
      "parent": "/admin"
    },
    "/admin/services": {
      "filePath": "admin/services.ts",
      "parent": "/admin"
    },
    "/staff/appointment": {
      "filePath": "staff/appointment.ts",
      "parent": "/staff"
    },
    "/staff/patients": {
      "filePath": "staff/patients.ts",
      "parent": "/staff"
    },
    "/admin/": {
      "filePath": "admin/index.ts",
      "parent": "/admin"
    },
    "/staff/": {
      "filePath": "staff/index.ts",
      "parent": "/staff"
    },
    "/admin/staff/shifts": {
      "filePath": "admin/staff/shifts.ts",
      "parent": "/admin"
    },
    "/admin/staff/": {
      "filePath": "admin/staff/index.ts",
      "parent": "/admin"
    }
  }
}
ROUTE_MANIFEST_END */
