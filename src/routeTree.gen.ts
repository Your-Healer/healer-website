/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignInImport } from './routes/sign-in'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as layoutImport } from './routes/__layout'
import { Route as IndexImport } from './routes/index'
import { Route as StaffsIndexImport } from './routes/staffs/index'
import { Route as ShiftWorkingsIndexImport } from './routes/shiftWorkings/index'
import { Route as ServicesIndexImport } from './routes/services/index'
import { Route as RoomsIndexImport } from './routes/rooms/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as PatientsIndexImport } from './routes/patients/index'
import { Route as MedicalRecordsIndexImport } from './routes/medical-records/index'
import { Route as DepartmentsIndexImport } from './routes/departments/index'
import { Route as AppointmentsIndexImport } from './routes/appointments/index'
import { Route as AnalyticsIndexImport } from './routes/analytics/index'
import { Route as AccountsIndexImport } from './routes/accounts/index'
import { Route as StaffsShiftsImport } from './routes/staffs/shifts'
import { Route as AppointmentsAppointmentIdImport } from './routes/appointments/$appointmentId'
import { Route as MedicalRecordsPatientsPatientIdImport } from './routes/medical-records/patients/$patientId'

// Create/Update Routes

const SignInRoute = SignInImport.update({
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const layoutRoute = layoutImport.update({
  id: '/__layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StaffsIndexRoute = StaffsIndexImport.update({
  path: '/staffs/',
  getParentRoute: () => rootRoute,
} as any)

const ShiftWorkingsIndexRoute = ShiftWorkingsIndexImport.update({
  path: '/shiftWorkings/',
  getParentRoute: () => rootRoute,
} as any)

const ServicesIndexRoute = ServicesIndexImport.update({
  path: '/services/',
  getParentRoute: () => rootRoute,
} as any)

const RoomsIndexRoute = RoomsIndexImport.update({
  path: '/rooms/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const PatientsIndexRoute = PatientsIndexImport.update({
  path: '/patients/',
  getParentRoute: () => rootRoute,
} as any)

const MedicalRecordsIndexRoute = MedicalRecordsIndexImport.update({
  path: '/medical-records/',
  getParentRoute: () => rootRoute,
} as any)

const DepartmentsIndexRoute = DepartmentsIndexImport.update({
  path: '/departments/',
  getParentRoute: () => rootRoute,
} as any)

const AppointmentsIndexRoute = AppointmentsIndexImport.update({
  path: '/appointments/',
  getParentRoute: () => rootRoute,
} as any)

const AnalyticsIndexRoute = AnalyticsIndexImport.update({
  path: '/analytics/',
  getParentRoute: () => rootRoute,
} as any)

const AccountsIndexRoute = AccountsIndexImport.update({
  path: '/accounts/',
  getParentRoute: () => rootRoute,
} as any)

const StaffsShiftsRoute = StaffsShiftsImport.update({
  path: '/staffs/shifts',
  getParentRoute: () => rootRoute,
} as any)

const AppointmentsAppointmentIdRoute = AppointmentsAppointmentIdImport.update({
  path: '/appointments/$appointmentId',
  getParentRoute: () => rootRoute,
} as any)

const MedicalRecordsPatientsPatientIdRoute =
  MedicalRecordsPatientsPatientIdImport.update({
    path: '/medical-records/patients/$patientId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/__layout': {
      id: '/__layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof layoutImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/appointments/$appointmentId': {
      id: '/appointments/$appointmentId'
      path: '/appointments/$appointmentId'
      fullPath: '/appointments/$appointmentId'
      preLoaderRoute: typeof AppointmentsAppointmentIdImport
      parentRoute: typeof rootRoute
    }
    '/staffs/shifts': {
      id: '/staffs/shifts'
      path: '/staffs/shifts'
      fullPath: '/staffs/shifts'
      preLoaderRoute: typeof StaffsShiftsImport
      parentRoute: typeof rootRoute
    }
    '/accounts/': {
      id: '/accounts/'
      path: '/accounts'
      fullPath: '/accounts'
      preLoaderRoute: typeof AccountsIndexImport
      parentRoute: typeof rootRoute
    }
    '/analytics/': {
      id: '/analytics/'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsIndexImport
      parentRoute: typeof rootRoute
    }
    '/appointments/': {
      id: '/appointments/'
      path: '/appointments'
      fullPath: '/appointments'
      preLoaderRoute: typeof AppointmentsIndexImport
      parentRoute: typeof rootRoute
    }
    '/departments/': {
      id: '/departments/'
      path: '/departments'
      fullPath: '/departments'
      preLoaderRoute: typeof DepartmentsIndexImport
      parentRoute: typeof rootRoute
    }
    '/medical-records/': {
      id: '/medical-records/'
      path: '/medical-records'
      fullPath: '/medical-records'
      preLoaderRoute: typeof MedicalRecordsIndexImport
      parentRoute: typeof rootRoute
    }
    '/patients/': {
      id: '/patients/'
      path: '/patients'
      fullPath: '/patients'
      preLoaderRoute: typeof PatientsIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/rooms/': {
      id: '/rooms/'
      path: '/rooms'
      fullPath: '/rooms'
      preLoaderRoute: typeof RoomsIndexImport
      parentRoute: typeof rootRoute
    }
    '/services/': {
      id: '/services/'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof ServicesIndexImport
      parentRoute: typeof rootRoute
    }
    '/shiftWorkings/': {
      id: '/shiftWorkings/'
      path: '/shiftWorkings'
      fullPath: '/shiftWorkings'
      preLoaderRoute: typeof ShiftWorkingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/staffs/': {
      id: '/staffs/'
      path: '/staffs'
      fullPath: '/staffs'
      preLoaderRoute: typeof StaffsIndexImport
      parentRoute: typeof rootRoute
    }
    '/medical-records/patients/$patientId': {
      id: '/medical-records/patients/$patientId'
      path: '/medical-records/patients/$patientId'
      fullPath: '/medical-records/patients/$patientId'
      preLoaderRoute: typeof MedicalRecordsPatientsPatientIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  DashboardRoute,
  SignInRoute,
  AppointmentsAppointmentIdRoute,
  StaffsShiftsRoute,
  AccountsIndexRoute,
  AnalyticsIndexRoute,
  AppointmentsIndexRoute,
  DepartmentsIndexRoute,
  MedicalRecordsIndexRoute,
  PatientsIndexRoute,
  ProfileIndexRoute,
  RoomsIndexRoute,
  ServicesIndexRoute,
  ShiftWorkingsIndexRoute,
  StaffsIndexRoute,
  MedicalRecordsPatientsPatientIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.ts",
      "children": [
        "/",
        "/__layout",
        "/dashboard",
        "/sign-in",
        "/appointments/$appointmentId",
        "/staffs/shifts",
        "/accounts/",
        "/analytics/",
        "/appointments/",
        "/departments/",
        "/medical-records/",
        "/patients/",
        "/profile/",
        "/rooms/",
        "/services/",
        "/shiftWorkings/",
        "/staffs/",
        "/medical-records/patients/$patientId"
      ]
    },
    "/": {
      "filePath": "index.ts"
    },
    "/__layout": {
      "filePath": "__layout.ts"
    },
    "/dashboard": {
      "filePath": "dashboard.ts"
    },
    "/sign-in": {
      "filePath": "sign-in.ts"
    },
    "/appointments/$appointmentId": {
      "filePath": "appointments/$appointmentId.tsx"
    },
    "/staffs/shifts": {
      "filePath": "staffs/shifts.ts"
    },
    "/accounts/": {
      "filePath": "accounts/index.ts"
    },
    "/analytics/": {
      "filePath": "analytics/index.ts"
    },
    "/appointments/": {
      "filePath": "appointments/index.ts"
    },
    "/departments/": {
      "filePath": "departments/index.ts"
    },
    "/medical-records/": {
      "filePath": "medical-records/index.ts"
    },
    "/patients/": {
      "filePath": "patients/index.ts"
    },
    "/profile/": {
      "filePath": "profile/index.ts"
    },
    "/rooms/": {
      "filePath": "rooms/index.ts"
    },
    "/services/": {
      "filePath": "services/index.ts"
    },
    "/shiftWorkings/": {
      "filePath": "shiftWorkings/index.ts"
    },
    "/staffs/": {
      "filePath": "staffs/index.ts"
    },
    "/medical-records/patients/$patientId": {
      "filePath": "medical-records/patients/$patientId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
